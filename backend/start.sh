#!/usr/bin/env bash
set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ KeywordHub API..."

# –ñ–¥–µ–º –ë–î
echo "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
python - <<'PY'
import os, time, psycopg2
host=os.getenv("POSTGRES_HOST","db")
port=int(os.getenv("POSTGRES_PORT","5432"))
user=os.getenv("POSTGRES_USER","app")
pwd=os.getenv("POSTGRES_PASSWORD","app")
db=os.getenv("POSTGRES_DB","keywordhub")
print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {host}:{port} –∫–∞–∫ {user} –∫ –ë–î {db}")

# –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ postgres –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ë–î –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
for i in range(30):
    try:
        conn = psycopg2.connect(host=host, port=port, user=user, password=pwd, dbname='postgres')
        conn.autocommit = True
        cur = conn.cursor()
        cur.execute(f"SELECT 1 FROM pg_database WHERE datname = '{db}'")
        if not cur.fetchone():
            cur.execute(f'CREATE DATABASE "{db}"')
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db} —Å–æ–∑–¥–∞–Ω–∞!")
        else:
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {db} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        cur.close()
        conn.close()
        break
    except Exception as e:
        print(f"–ü–æ–ø—ã—Ç–∫–∞ {i+1}/30: {e}")
        time.sleep(1)
else:
    print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ—Å–ª–µ 30 –ø–æ–ø—ã—Ç–æ–∫")
    raise SystemExit("DB not ready")

# –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∞–º–æ–π –ë–î
for i in range(10):
    try:
        conn = psycopg2.connect(host=host, port=port, user=user, password=pwd, dbname=db)
        conn.close()
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ!")
        break
    except Exception as e:
        print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ {i+1}/10: {e}")
        time.sleep(1)
PY

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ Alembic
echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
alembic upgrade head

echo "üéØ –ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞..."
exec uvicorn app.main:app --host 0.0.0.0 --port 8000 --log-level info